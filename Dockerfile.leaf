# syntax=docker/dockerfile:1

# The tag name for the docker image produced in the base dockerfile
ARG TAGN

## Build dependencies defined first ##
FROM mime-base:$TAGN as mime-dependencies
ENV CUDA_HOME="/usr/local/cuda"
ENV CPATH="${CUDA_HOME}/include:${CPATH}"
ENV LIBRARY_PATH="${CUDA_HOME}/lib64:$LIBRARY_PATH"
ENV VPI_BASE_DEPENDENCIES="cmake pybind11-dev vpi1-dev" 

ENV FACIAL_DEPENDENCIES="golang-1.13 golang-1.13-doc golang-1.13-go golang-1.13-src"
ENV TERMINAL_DEPENDENCIES="magic-wormhole git"
ENV CAPTURE_DEPENDENCIES="python3-vpi1 alsa-base alsa-utils ninja-build pybind11-dev pypy-dev"
ENV CAPTURE_DEPENDENCIES_PIP3="timm scipy"

FROM mime-dependencies as mime-update
RUN apt-get autoclean && apt-get update -qq

FROM mime-update as mime-update-vpi
RUN apt-get install -y ${VPI_BASE_DEPENDENCIES}

# Enables terminal access
FROM mime-update-vpi as mime-terminal
RUN apt-get install -y ${CAPTURE_DEPENDENCIES}
RUN apt-get install -y ${FACIAL_DEPENDENCIES}
RUN apt-get install -y ${TERMINAL_DEPENDENCIES}
RUN pip3 install ${CAPTURE_DEPENDENCIES_PIP3}

COPY terminal/. ${PROGHOME}/
COPY . ${PROGHOME}/source/


# Captures data from physical and virtual sensors
FROM mime-update-vpi AS mime-capture
RUN apt-get install -y -qq ${CAPTURE_DEPENDENCIES}
RUN pip3 install ${CAPTURE_DEPENDENCIES_PIP3}
COPY perception/. ${PROGHOME}/


# Displays facial features
FROM mime-update as mime-face
RUN apt-get install -y -qq ${FACIAL_DEPENDENCIES}
COPY face/. ${PROGHOME}/


# Run main ROS processes and JAMES functionality
FROM mime-base:$TAGN AS mime-brain
COPY brain/. ${PROGHOME}/


# Wrangle MIMe attachments
FROM mime-base:$TAGN AS mime-limbs
COPY limbs/. ${PROGHOME}/
